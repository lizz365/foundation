package com.lizz.fundation;

import org.junit.Test;

public class OtherTest {

    @Test
    public  void aaa() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                int i=0;
                while (true) {
                    //true
                    System.out.println("线程是否被打断:" +i+"@" + Thread.currentThread().isInterrupted());
                    //true
                    System.out.println("线程确认是否被打断:" +i+"@"+ Thread.currentThread().isInterrupted());

                    //判断是否被中断
                    if(Thread.interrupted()){
                        System.out.println("线程被中断"+i+"@");

                        //此时返回 false
                        System.out.println("Thread.interupted():"+i+"@"+Thread.interrupted());
                        break;
                    }
                    i++;
                }
            }
        }).start();
    }

    /**
     * 全局平均，分割，上下值相等
     */
    @Test
    public void avg() {
        int[] nums = {238,130,138,114,205,222,238,191,193,163,185,152,114,70,79,75,126,104,121,90,101,88,95,89,820,638,595,593,718,657,701,687,711,617,591,608,591,782,831,863,579,589,625,655,647,705,754,770,906,772,750,778,936,1043,910,820,854,826,786,754,745,846,919,905,756,762,742,804,855,858,835,831,879,846,877,862,847,922,901,902,907,876,900,877,773,851,911,797,791,794,788,870,748,847,780,889,828,930,841,873,826,843,860,890,818,823,853,948,868,20,1034,900,999,1051,1114,1039,1083,1138,920,1593,939,846,834,1076,1043,188,1588,1028,992,1018,1005,773,623,624,569,698,690,714,621,597,570,599,596,62,49,39,34,57,52,57,59,51,52,65,50,529,389,362,350,538,533,546,541,505,466,451,461,360,287,268,201,339,364,315,362,280,292,296,312,207,167,136,115,167,189,177,171,155,165,144,164,128,73,76,72,117,93,106,102,121,80,90,85,28,22,33,19,44,37,38,39,32,28,26,25,23,23,26,21,29,30,31,24,25,16,18,28,25,50,71,57,34,34,21,29,46,24,37,44,72,274,312,382,96,68,125,127,158,178,226,240,397,1628,1827,1810,429,558,541,705,784,885,1103,1368,1723,2382,2421,2134,1862,2214,2596,2875,2729,2219,2045,2143,1535,916,1030,928,1263,1173,1148,1162,1085,902,910,899};
        int max = 0;
        for (int i = 0; i < nums.length; i++) {
            max += nums[i];
        }
        int halfnum = max / 2;
        int unitNum = max / nums.length;
        System.out.println("max=" + max + ",halfnum=" + halfnum);
        System.out.println("unitNum=" + unitNum);
        int count = 0;
        int a = 1;
        while (a < 10000) {
            count = 0;
            for (int i : nums) {
                if (i > a)
                    count += i;
            }
            a++;
            if (count < halfnum) {
                System.out.println("avg:" + a + "count:" + count);
                break;
            }
        }


    }

    /**
     * 调和平均
     */
    @Test
    public void avg1() {
        int[] nums = {577, 548, 571, 558, 498, 472, 466, 435, 397, 386, 367, 329, 316, 309, 300, 312, 277, 276, 278, 267, 237, 220, 195, 175, 177, 165, 189, 179, 155, 155, 155, 161, 141, 137, 128, 119, 104, 101, 99, 103, 102, 84, 74, 92, 89, 87, 85, 74, 75, 79, 68, 70, 56, 59, 51, 62, 64, 64, 55, 56, 67, 77, 66, 71, 79, 78, 69, 87, 103, 115, 127, 129, 148, 170, 173, 211, 242, 296, 358, 417, 466, 555, 665, 727, 760, 900, 1076, 1218, 1467, 1734, 2082, 2595, 3077, 3488, 3796, 3865, 4088, 4713, 5469, 6028, 6027, 5504, 5098, 4959, 5252, 5363, 4886, 4196, 3327, 3119, 2966, 2911, 2835, 2650, 2462, 2560, 2582, 2691, 2713, 2525, 2353, 2290, 2266, 2263, 2267, 2250, 2191, 2143, 2205, 2222, 2179, 2242, 2307, 2312, 2335, 2457, 2510, 2542, 2665, 2882, 3049, 3104, 3192, 3150, 3265, 3504, 3679, 3418, 3185, 3119, 2977, 2966, 2964, 2902, 2842, 3010, 3048, 3134, 3288, 3415, 3688, 3835, 3801, 3777, 3904, 4087, 4220, 4184, 4138, 4109, 4296, 4299, 4303, 4331, 4401, 4415, 4412, 4377, 4369, 4345, 4449, 4516, 4574, 4670, 4675, 4623, 4824, 4818, 4857, 4958, 4828, 4792, 4941, 5072, 5085, 5032, 4980, 5047, 5213, 5292, 5260, 5203, 5290, 5345, 5849, 6592, 6916, 6842, 6645, 6492, 6947, 7828, 7812, 7802, 7802, 7532, 6882, 7299, 7325, 7005, 6595, 6341, 6167, 5862, 5492, 5117, 4755, 4461, 4228, 4174, 4040, 3800, 3759, 3746, 3670, 3616, 3602, 3504, 3298, 3261, 3280, 3303, 3263, 3080, 2928, 2719, 2640, 2513, 2369, 2301, 2170, 2047, 2095, 2086, 1967, 1929, 1779, 1695, 1697, 1703, 1567, 1375, 1215, 1131, 1063, 1090, 1043, 1001, 912, 881, 867, 858, 811, 771, 711, 702, 703, 664, 683, 653, 610, 547, 545, 460, 465, 424};
//        int[] nums = {60,30};
        int max = 0;
        for (int i = 0; i < nums.length; i++) {
            max += nums[i];
        }
        int unitNum = max / nums.length;
        float count = 0;
        for (int i : nums) {
            count += (float)1/i;
        }
        System.out.println("unitNum=" + unitNum);
        System.out.println(nums.length / count);

    }
}

